<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<!-- 스프링의 핵심 부품인 DispatcherServlet에 등록 되어야하는 설정들 기록하는 설정 파일 -->


	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- component-scan에 등록되어 있는 base-package 하위 경로들에 있는 어노테이션들을 활성화 해주는 설정 
		ex)@RequestMapping,@Transaction,.... -->
	<interceptors>
		<interceptor>
			<mapping path="/*.me" /> <!-- .me 가 붙은 요청 전체 -->
			<exclude-mapping path="/login.me" /> <!-- 특정 요청 제외 -->
			<exclude-mapping path="/insert.me" />
			<exclude-mapping path="/idCheck.me" />
			<exclude-mapping path="/mypage.me"/>

			<!-- beans:bean class : 등록할 인터셉터의 풀 경로 -->
			<beans:bean
				class="com.kh.soak.common.interceptor.LoginInterceptor" />
		</interceptor>
		
		<interceptor>
        <mapping path="/*.ad" /> <!-- admin 패키지의 .ad 요청 전체 -->
        <exclude-mapping path="/loginForm.ad" /> <!-- 로그인 폼은 제외 -->
        <exclude-mapping path="/login.ad" /> <!-- 로그인 처리는 제외 -->
        <exclude-mapping path="/idCheck.ad" /> <!-- 아이디 중복체크는 제외 -->
        <exclude-mapping path="/logout.ad" /> <!-- 로그아웃은 제외 -->
        <!-- Admin 전용 인터셉터 -->
        <beans:bean class="com.kh.soak.common.interceptor.AdminInterceptor" />
    </interceptor>
    
	</interceptors>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- 요청 주소 자동 완성 도구 기존 forward 작업을 수행하려면 보여주고자 하는 뷰 페이지 경로를 입력해야 했다. 해당 
		경로를 기본으로 설정하여 생략할 수 있도록 해주는 설정으로 앞쪽엔 /WEB-INF/views/ 를 붙이고 뒤쪽엔 .jsp 를 붙여준다. 
		spring 에서 제공하는 ViewResolver 객체이며 prefix : 접두사 / suffix : 접미사로 등록되어 있다. -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="com.kh.soak">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
	</context:component-scan>
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="100000000" />
		<beans:property name="maxInMemorySize"
			value="100000000" />
	</beans:bean>

	<beans:bean id="chatWebSocketHandler"
		class="com.kh.soak.chat.handler.ChatWebSocketHandler" />

	<websocket:handlers>
		<websocket:mapping handler="chatWebSocketHandler"
			path="/chatting" />
		<websocket:handshake-interceptors>
			<beans:bean
				class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
	</websocket:handlers>

	<beans:bean id="objectMapper"
		class="com.fasterxml.jackson.databind.ObjectMapper" />

</beans:beans>

